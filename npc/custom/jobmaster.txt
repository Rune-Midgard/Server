//===== rAthena Script =======================================
//= Job Master
//===== Description: =========================================
//= A fully functional job changer.
//===== Additional Comments: =================================
//= 1.0 Initial script. [Euphy]
//= 1.1 Fixed reset on Baby job change.
//= 1.2 Added Expanded Super Novice support and initial Kagerou/Oboro support.
//= 1.3 Kagerou/Oboro added.
//= 1.4 Rebellion added.
//= 1.5 Added option to disable RebirthClass. [mazvi]
//= 1.6 Added option to get job related equipment on change. [Braniff]
//= 1.7 Readability changes. Also added BabyExpanded and BabySummoner classes. [Jey]
//= 1.8 Added option to disable Baby Novice Only but Baby Class can be Enabled [mazvi]
//= 1.9 Migrate/Integrate to Global Functions Platinum Skills. [mazvi]
//============================================================

prt_in,38,104,4	script	Job Master	952,{
function Job_Menu;function A_An; function delZItem;

	mes "[Job Master]";
	if (#LANGUE == 1 )mes "I am able to train you until you rebirth, my prices are 10,000z for novices and 50,000z for more experimented adventurers.";
	else mes "Je peux vous entraîner jusqu'au rebirth, mes prix sont 10,000z pour les novices et 50,000z pour les aventuriers plus expérimentés";
	next;
	mes "[Job Master]";
	if (Class > 4049) {
		if (#LANGUE ==1) mes "No more jobs are available.";
		else mes "Je ne peux plus rien faire pour vous";
		close;
	}
	if ( Class > 4000 && Class < 4008){
		if (#LANGUE == 1)mes "You should go and see your instructor to change job.";
		else mes "Vous allez devoir vous en remettre à l'instructeur de votre métier pour évoluer.";
		close;
	}
	if (checkfalcon() || checkcart() || checkriding() || ismounting()) {
		if (#LANGUE == 1 )mes "Please remove your "+((checkfalcon())?"falcon":"")+((checkcart())?"cart":"")+((checkriding())?"Peco":"")+((ismounting())?"mount":"")+" before proceeding.";
		else mes "Merci de retirer votre "+((checkfalcon())?"falcon":"")+((checkcart())?"cart":"")+((checkriding())?"Peco":"")+((ismounting())?"mount":"")+" avant de commencer.";
		close;
	}
	if (.SkillPointCheck && SkillPoint) {
		if (#LANGUE == 1 )mes "Please use all your skill points before proceeding.";
		else mes "Veuillez attribuer tous vos points de skills avant de commencer.";
		close;
	}

	set .@eac, eaclass();
	set .@i, ((.ThirdClass)?roclass(.@eac&EAJ_UPPERMASK):Class);
	if (.@i > 6 && .@i < 22) {
		if (#LANGUE == 1 ) mes "I'm just an intern and am not allowed to rebirth people. You'll have to see my boss, Valkyrie in order to do so.";
		else mes "Je suis juste un apprenti, par conséquent je ne suis pas autorisé à faire renaître les gens. Vous devrez vous adresser à ma chef, Valkyrie, pour aller plus loin.";
		close;
	}
	set .@j1, roclass(.@eac|EAJL_2_1); set .@j2,roclass(.@eac|EAJL_2_2);
	if ((.@eac&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE) setarray .@exp[0],roclass(.@eac|EAJL_THIRD),99;
	if (Class == Job_Ninja) setarray .@exp[0],.@j1,70;
	if (.@exp[0] && .ThirdClass) {
		if (BaseLevel < .Rebirth[0] || JobLevel < .@exp[1]) {
			set .@blvl, .Rebirth[0]-BaseLevel; set .@jlvl, .@exp[1]-JobLevel;
			if (#LANGUE == 1 ) mes "You need "+((.@blvl>0)?.@blvl+" more base levels "+((.@jlvl>0)?"/ ":""):"")+((.@jlvl>0)?.@jlvl+" more job levels ":"")+"to continue.";
			else mes "Il vous manque "+((.@blvl>0)?.@blvl+" niveaux de base "+((.@jlvl>0)?"/ ":""):"")+((.@jlvl>0)?.@jlvl+" niveaux de jobs ":"")+"pour continuer.";
			close;
		}
		if (#LANGUE == 1 ) mes "Switch to "+jobname(.@exp[0])+"?";
		else mes "Etes-vous sûr de vouloir passer "+jobname(.@exp[0])+"?";
		next;
		Job_Menu(.@exp[0]);
		close;
	}
	if (.@eac&EAJL_2)
		if (.@eac&(EAJL_UPPER|EAJL_BABY) || roclass(.@eac|EAJL_UPPER) == -1) {
			if (#LANGUE == 1 ) mes "No more jobs are available.";
			else mes "Je ne peux plus rien faire pour vous";
			close;
		}
	if ((.@eac&EAJ_BASEMASK) == EAJ_NOVICE) {
		if (JobLevel < .JobReq[0])
			if (#LANGUE == 1 ) mes "10000 zenys and a job level of "+.JobReq[0]+" is required to change into the 1st Class.";
			else mes "Il vous faut 10000z et un niveau de job de "+.JobReq[0]+" pour que je change votre classe.";
		else if (Class == 4001 && .LastJob && lastJob) {
			if (#LANGUE == 1 ) mes "You'll have to see your instructor to change your job.";
			else mes "Vous allez devoir vous en remettre à l'instructeur de votre classe pour évoluer.";
			close;
		} else switch(Class) {
			case 0: if (Zeny>=10000) {
				Job_Menu(1,2,3,4,5,6,23,4046,24,25,4023);
			}
			else{
				if (#LANGUE == 1 ) mes "I'm sorry but you do not have enough money. Come back later with at least 10 000 zenys.";
				else mes "Je suis désolé mais vous n'avez pas assez d'argent. Revenez plus tard avec au moins 10 000 zenys";
				close;
			}
			break;
			//case 4001: Job_Menu(4002,4003,4004,4005,4006,4007);
			case 4023: Job_Menu(4024,4025,4026,4027,4028,4029,4045);
			default: mes "An error has occurred."; break;
		}
		close;
	}
	if (roclass(.@eac|EAJL_2_1) == -1 || roclass(.@eac|EAJL_2_2) == -1)
		if (#LANGUE == 1 ) mes "No more jobs are available.";
		else mes "Je ne peux plus rien faire pour vous";
	else if (!(.@eac&EAJL_2) && JobLevel < .JobReq[1])
		if (#LANGUE == 1 ) mes "50000 zenys and a job level of "+.JobReq[1]+" is required to change into the 2nd Class.";
		else mes "Il vous faut 50000z et un niveau de métier de "+.JobReq[1]+" pour que je change votre métier.";
	else if (.LastJob && lastJob && (.@eac&EAJL_UPPER) ) {
		if (#LANGUE == 1 ) mes "You'll have to see your instructor to change your job.";
		else mes "Vous allez devoir vous en remettre à l'instructeur de votre métier pour évoluer.";
		close;
	} 
	else {
		if (Zeny >= 50000) Job_Menu(.@j1,.@j2);
		else {
			if (#LANGUE == 1 ) mes "I'm sorry but you do not have enough money. Come back later with at least 50 000 zenys.";
			else mes "Je suis désolée mais vous n'avez pas assez d'argent. Revenez plus tard avec au moins 50 000 zenys";
		}
	}
	close;

function Job_Menu {
	while(1) {
		if (getargcount() > 1) {
			mes "Select a job.";
			set .@menu$,"";

			for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
				set .@menu$, .@menu$+" ~ "+jobname(getarg(.@i))+":";
			set .@menu$, .@menu$+" ~ ^777777Cancel^000000";
			next;
			set .@i, getarg(select(.@menu$)-1,0);
			if (!.@i) close;
			if ((.@i == 23 || .@i == 4045) && BaseLevel < .SNovice) {
				mes "[Job Master]";
				if (#LANGUE == 1 ) mes "A base level of "+.SNovice+" is required to turn into a "+jobname(.@i)+".";
				else mes "Un niveau de base égal à "+.SNovice+" est nécessaire pour devenir un "+jobname(.@i)+".";
				close;
			}
			
			mes "[Job Master]";
			if (#LANGUE == 1 ) mes "Are you sure?";
			else mes "Etes vous sûr ?";
			next;
		} else
			set .@i, getarg(0);
		if (select(" ~ Change into ^0055FF"+jobname(.@i)+"^000000 class: ~ ^777777"+((getargcount() > 1)?"Go back":"Cancel")+"^000000") == 1) {
			mes "[Job Master]";
			delZItem();

			if (#LANGUE == 1 ) mes "You are now "+A_An(jobname(.@i))+"!";
			else mes "Félicitations, vous êtes maintenant "+A_An(jobname(.@i))+"!";
			if (.@i==4001 && .LastJob) set lastJob, Class;
			jobchange .@i;
			if (.@i==4001 || .@i==4023) resetlvl(1);
			specialeffect2 338; specialeffect2 432;
			if (.Platinum) callsub Get_Platinum;
			if ((.@i>=1 && .@i<=6) || (.@i>=4024 && .@i<=4029) || .@i == 23 || .@i ==4045 || .@i == 24 || .@i == 25  || .@i == 4046  || .@i == 4222  || .@i == 4225  || .@i == 4228){
				set Zeny,Zeny -10000;
			}
			else{
				set Zeny,Zeny -50000;
			}
			close;
		}
		if (getargcount() == 1) return;
		mes "[Job Master]";
	}
	end;
}


function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0);
}


function delZItem {
	if( .zeny_charge || .item_ID_charge[0] ) {
		if( set( .@n, .zeny_charge - Zeny ) > 0 ) {
			set .@miss, 1;
			mes "- "+ .@n +" Zeny";
		}
		for( set .@zi, 0; .@zi < getarraysize( .item_ID_charge ); set .@zi, .@zi + 1 )
			if( .item_ID_charge[ .@zi ] != 0 && set( .@n, countitem( .item_ID_charge[ .@zi ] ) - .item_cost_charge[ .@zi ] ) < 0 ) {
				set .@miss, 1;
				if( .item_cost_charge[ .@zi ] < 1 ) {
					mes "An error has occured.";
					close;
				}
				mes "- "+ (-.@n) +" "+ getitemname( .item_ID_charge[ .@zi ] );
			}
		if( .@miss ) {
			mes "... are missing to proceed.";
			close;
		}
	}
	if( .zeny_charge )
		set Zeny, Zeny - .zeny_charge;
	if( .item_ID_charge[0] )
		for( set .@zi, 0; .@zi < getarraysize( .item_ID_charge ); set .@zi, .@zi + 1 )
			delitem .item_ID_charge[ .@zi ], .item_cost_charge[ .@zi ];
	return;
}

Get_Platinum:
	skill 142,1,0;
	switch(BaseClass) {
		case 0: if (Class !=23) skill 143,1,0; break;
		case 1: skill 144,1,0; skill 145,1,0; skill 146,1,0; break;
		case 2: skill 157,1,0; break;
		case 3: skill 147,1,0; skill 148,1,0; break;
		case 4: skill 156,1,0; break;
		case 5: skill 153,1,0; skill 154,1,0; skill 155,1,0; break;
		case 6: skill 149,1,0; skill 150,1,0; skill 151,1,0; skill 152,1,0; break;
		default: break;
	}
	switch(BaseJob) {
		case 7: skill 1001,1,0; break;
		case 8: skill 1014,1,0; break;
		case 9: skill 1006,1,0; break;
		case 10: skill 1012,1,0; skill 1013,1,0; break;
		case 11: skill 1009,1,0; break;
		case 12: skill 1003,1,0; skill 1004,1,0; break;
		case 14: skill 1002,1,0; break;
		case 15: skill 1015,1,0; skill 1016,1,0; break;
		case 16: skill 1007,1,0; skill 1008,1,0; skill 1017,1,0; skill 1018,1,0; skill 1019,1,0; break;
		case 17: skill 1005,1,0; break;
		case 18: skill 238,1,0; break;
		case 19: skill 1010,1,0; break;
		case 20: skill 1011,1,0; break;
		default: break;
	}
	return;

OnInit:
	setarray .Rebirth[0],99,50;	// Minimum base level, job level to rebirth OR change to third class
	setarray .JobReq[0],10,40;	// Minimum job level to turn into 1st class, 2nd class
	set .ThirdClass,0;		// Enable third classes? (1: yes / 0: no)
	set .SNovice,45;		// Minimum base level to turn into Super Novice
	set .LastJob,1;			// Enforce linear class changes? (1: yes / 0: no)
	set .SkillPointCheck,1;		// Force player to use up all skill points? (1: yes / 0: no)
	set .Platinum,0;		// Get platinum skills automatically? (1: yes / 0: no)
	set .zeny_charge,0;
	setarray .item_ID_charge[0], 0, 0;	// Ask items ? (ID items. Example: setarray .item_charge[0], 601, 602, 603; / put 0 to disable this option)
	setarray .item_cost_charge[0], 0, 0;	// Cost items -- item_charge must be enabled
	end;
}