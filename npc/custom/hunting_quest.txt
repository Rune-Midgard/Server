/**
*   Fonction qui distribue la récompense en expérience et en Shards et supprime la quête
*   @quest_id           :   Id de la quête à supprimer
*   @exp_base           :   Exp base à distribuer
*   @exp_job            :   Exp job à distribuer
*   @reward             :   Nombre de reward à donner
*   @reward_id          :   ID de la reward à donner
*   @reward_name        :   Nom de la reward à donner
*/
function	script	F_HUNTING_REWARD	{

    set .@quest_id, getarg(0);
    set .@exp_base, getarg(1);
    set .@exp_job, getarg(2);
    set .@reward, getarg(3);
		set .@reward_id, getarg(4);
		set .@reward_name$, getarg(5);

    mes "[" + strnpcinfo(0) + "]";
    if (#LANGUE == 1){
        mes "Congratulation! To reward you for you hard work, here is some experience and some "+.@reward_name$+".";
        next;
        mes "I hope to see you soon!";
    } else {
        mes "Bravo ! Pour récompenser ton travail, voici de l'expérience et quelques "+.@reward_name$+".";
        next;
        mes "J'espère te revoir bientôt !";
    }

    erasequest(.@quest_id);
    getexp .@exp_base,.@exp_job;
    getitem .@reward_id, .@reward;

    return;
}

/**
*   Fonction qui set la quête de hunt au joueur et qui lui prend ses crédits
*   @quest_id           :   Id de la quête
*   @credits_required   :   Nombre de crédit à prendre
*/
function	script	F_HUNTING_QUEST	{

    set .@quest_id, getarg(0);
    set .@credits_required, getarg(1);

    callfunc "F_NO_DOUBLE_ACCOUNT_QUEST";
    setquest(.@quest_id);
    query_sql("select `value` from `acc_reg_num` WHERE `account_id` = "+getcharid(3)+" and `key` = '#credits';",.@credits);
    .@credits += .@credits_required;
    if ( .@credits> $credit_max ) .@credits = $credit_max;
    query_sql("replace into `acc_reg_num`values ("+getcharid(3) + ",'#credits' ,0,"+.@credits+");");

    return;

}

/**
*   Fonction qui empêche l'abus des huntings quest pour avoir plein de Shards of Potential
*/
function	script	F_NO_DOUBLE_ACCOUNT_QUEST	{
		
    query_sql "SELECT `char`.char_id,`char`.account_id,`quest`.quest_id FROM `char` LEFT JOIN login ON `char`.account_id = login.account_id LEFT JOIN quest ON `char`.char_id = `quest`.char_id WHERE last_unique_id = ( SELECT last_unique_id FROM login WHERE account_id = " + playerattached() + " ) AND `quest`.quest_id BETWEEN 70000 AND 78000 AND `char`.account_id != " + playerattached()  , .@char_id, .@account_id, .@quest_id;

    if (.@char_id >= 1){
				.@menu_giveup$ = "";
        mes "[" + strnpcinfo(0) + "]";
        if (#LANGUE  == 1 ){
            mes "It seems an other character that you own has already a quest.";
        } else {
            mes "Il semblerait qu'un autre personnage que tu possèdes à déjà une quête.";
        }
				next;
				mes "[" + strnpcinfo(0) + "]";
        if (#LANGUE  == 1 ){
            mes "Do you want to start a new quest on this character? This will delete the quest on the other character.";
						.@menu_giveup$ = "No:Yes";
        } else {
            mes "Voulez-vous recommencer une quête sur ce personnage ? Cela supprimera la quête sur l'autre personnage.";
						.@menu_giveup$ = "Non:Oui";
        }
				switch(select(.@menu_giveup$)){
						case 1:
								close;
						case 2:
								next;
								.@account_id_save = getcharid(3);
								if (attachrid(.@account_id)) {
									erasequest(quest_id);
									quest_id = 0;
									attachrid(.@account_id_save);
								}
								else{//can't attachrid so we delete manually
									//delete quest
									query_sql("delete FROM quest where char_id=" + .@char_id + " and quest_id between 70000 AND 78000;");
									//delete quest var
									query_sql("delete FROM char_reg_num where char_id = " + .@char_id + " and `key`= 'quest_id';");
								}
								
								mes "[" + strnpcinfo(0) + "]";
								mes "Done !";
								close;
				}
    }
    return;
}


/**
*   Fonction qui vérifie que le joueur à le bon level, les credits requis et pas déjà une quête
*   Si le joueur à déjà une quête il vérifie si la quête est terminée ou non
*   Si la quête est terminée distribue l'exp et les Shards (Pas de vérification de niveau pour la distribution des rewards)
*   Sinon il dit au joueur de continuer sa quête
*   @min_level          :   Niveau minimum pour prendre les quêtes
*   @max_level          :   Niveau maximum pour prendre les quêtes
*   @credits_required   :   Nombre de crédits requis pour prendre les quêtes
*   @reward_id          :   Item à donner, par défaut, des shards
*   @reward_name        :   Nom de la reward à donner
*		@speechPerso$				: 	Texte à afficher (format : "Texte_EN:texte_FR")
*/
function	script	F_VERIF_HUNTING	{

    set .@min_level, getarg(0);
    set .@max_level, getarg(1);
    set .@credits_required, getarg(2);
    set .@reward_id, getarg(3,35003);
    set .@reward_name$, getarg(4,"Shards of Potential");
    set .@speechPerso$, getarg(5,"");

    if (getgmlevel()>60){
        .@credits_required = 0;
    }

    if ( quest_id != 0 ){
				if (.@reward_id != reward_id){
					mes "[" + strnpcinfo(0) + "]";
					if (#LANGUE == 1){
							mes "You can give back this quest here.";
					} else {
							mes "Tu ne peux pas rendre cette quête ici.";
					}
					close;
				}
        if (checkquest(quest_id,HUNTING) == 2){
            callfunc "F_HUNTING_REWARD",
                quest_id, // ID DE LA QUETE QU IL A TERMINEE (à erasequest)
                exp_base, // EXP BASE TOTALE A DONNER
                exp_job, // EXP JOB TOTALE A DONNER
                reward,	// NOMBRE DE REWARD A DONNER
								.@reward_id, // ID DES REWARD A DONNER
								.@reward_name$; //NOM DE LA REWARD
            quest_id = 0;
            exp_base = 0;
            exp_job = 0;
            reward = 0;
						reward_id = 0;
            close;
        } else if (checkquest(quest_id,HUNTING) < 2){
            mes "[" + strnpcinfo(0) + "]";
            if (#LANGUE == 1){
                mes "Do you wish to give up already?";
                .@menu_giveup$ = "No:Yes";
            } else {
                mes "Tu abandonnes déjà ?";
                .@menu_giveup$ = "Non:Oui";
            }
            switch(select(.@menu_giveup$)){
                case 1:
                    break;
                case 2:
                    next;
                    mes "[" + strnpcinfo(0) + "]";
                    mes "Done !";
                    erasequest(quest_id);
                    quest_id = 0;
                    exp_base = 0;
                    exp_job = 0;
                    reward = 0;
										reward_id = 0;
                    break;
            }
            close;
        }
    }


    callfunc "F_NO_DOUBLE_ACCOUNT_QUEST";

    mes "[" + strnpcinfo(0) + "]";

    query_sql("select `value` from `acc_reg_num` WHERE `account_id` = "+getcharid(3)+" and `key` = '#credits';",.@credits);
    .@credits = $credit_max - .@credits;
		.@intro$ = "";
		if (.@speechPerso$ != "") {
			explode(.@introTrad$, .@speechPerso$, ":");
			if (#LANGUE == 1){
				.@intro$ = .@introTrad$[0];
			}else{
				.@intro$ = .@introTrad$[1];
			}
		}else {
			if (#LANGUE == 1){
				.@intro$ = "Hunt monsters for experience and Shards of Potential.";
			}
			else{
				.@intro$ = "Chasse des monstres pour de l'experience et des Shards of Potential.";
			}
		}
		
    if (#LANGUE == 1){
        if (BaseLevel< .@min_level || BaseLevel> .@max_level){
            mes "I only deal with quests for level "+.@min_level+" to "+.@max_level+".";
            close;
        }
        if (.@credits < .@credits_required){
            mes "You do not have enough credits to pay me. Come back when you have more!";
            close;
        }
    } else {
        if (BaseLevel<.@min_level || BaseLevel>.@max_level){
            mes "Je ne gére que les quêtes de level "+.@min_level+" à "+.@max_level+".";
            close;
        }
        if (.@credits < .@credits_required){
            mes "Tu n'as pas assez de crédits pour me payer. Reviens quand tu en auras plus !";
            close;
        }
    }
		mes .@intro$;

    return;
}

/**
*   Fonction qui gère la selection des monstres, le nombre de monstres à tuer, la quête à appliquer
*   @MobMenu$           :   Menu de selection des mobs
*   @index_to_start     :   Index où démarrer pour choisir les bons monstres dans $Mob_List[0] , les bonnes exp_base dans $Mob_BaseExp[0] et dans $Mob_JobExp[0]
*   @credits_required   :   Nombre de crédits requis pour prendre la quête
*   @npc_number         :   Numéro du NPC concerné pour set les quêtes (commence à 0)
*		@reward_name				:		Nom de la reward à donner
*/
function	script	F_APPLY_QUEST_MENU	{

    set .@MobMenu$, getarg(0);
    set .@index_to_start, getarg(1);
    set .@credits_required, getarg(2);
    set .@reward, getarg(3);
    set .@npc_number, getarg(4);
		set .@reward_id, getarg(5,35003);
		set .@reward_name$, getarg(6,"SHARDS");

    if (#LANGUE ==1){
        set .@menu$, "Hunting Quests:Nothing";
        set .@monster_speech$, "Choose between this monsters.";
        set .@level_speech$, "Choose how many monsters you want to hunt.";
        set .@come_back_soon$, "Do not hesitate to come back if you need!";
        set .@isCorrect$, "Yes:No";
        set .@verify_speech1$, "Are you sure that you to kill ";    
        set .@verify_speech2$, "for ";
        set .@verify_speech3$, "(Credits are not refundable)";
    } else {
        set .@menu$, "Hunting Quests:Rien";
        set .@monster_speech$, "Choisis entre ces monstres.";
        set .@level_speech$, "Choisis combien de monstres tu veux chasser.";
        set .@come_back_soon$, "N'hésites pas à revenir si tu en as besoin !";
        set .@isCorrect$, "Oui:Non";
        set .@verify_speech1$, "Es-tu sûr de vouloir tuer ";
        set .@verify_speech2$, "pour ";
        set .@verify_speech3$, "(Les credits ne sont pas remboursés)";
    }
   

    switch(select(.@menu$)){
        case 1:
            next;
            mes "[" + strnpcinfo(0) + "]";
            mes .@monster_speech$;
            set .@case,0;
            set .@quest_id, 70000 + .@npc_number * 1000; // Première HUNTING Quest du NPC @npc_number + 1
            switch(select(.@MobMenu$)){
                case 14:
                    .@case++;
                case 13:
                    .@case++;
                case 12:
                    .@case++;
                case 11:
                    .@case++;
                case 10:
                    .@case++;
                case 9:
                    .@case++;
                case 8:
                    .@case++;
                case 7:
                    .@case++;
                case 6:
                    .@case++;
                case 5:
                    .@case++;
                case 4:
                    .@case++;
                case 3:
                   .@case++;
                case 2:
                    .@case++;
                case 1:
                    break;
                default:
                    break;   
            }
            .@quest_id += 3 * .@case;
            next;
            mes .@level_speech$;
            switch(select("50:100:150")){
                case 1:
                    set .@number_of_mob, 50;
                    break;
                case 2:
                    set .@number_of_mob, 100;
                    .@quest_id++;
                    break;
                case 3:
                    set .@number_of_mob, 150;
                    .@quest_id += 2;
                    break; 
            }
            next;
            .@exp_base = $Mob_BaseExp[.@index_to_start + .@case] * .@number_of_mob / 3; // RATES QUETE XP EN 3 DONC IL FAUT DIVISER PAR 3;
            .@exp_job = $Mob_JobExp[.@index_to_start + .@case] * .@number_of_mob / 3; // RATES QUETE XP EN 3 DONC IL FAUT DIVISER PAR 3
            .@reward = .@reward * .@number_of_mob / 50;
            mes "[" + strnpcinfo(0) + "]";
            set .@monster_name$, getmonsterinfo($Mob_List[.@index_to_start + .@case],0);
            mes .@verify_speech1$ + .@number_of_mob + " " + .@monster_name$ + " " + .@verify_speech2$ + .@credits_required + " credit(s)."+ .@verify_speech3$ ;
            mes "Reward : ";
            mes "EXP BASE: " + .@exp_base * 3;
            mes "EXP JOB : " + .@exp_job * 3;
            mes .@reward_name$+" : " + .@reward;
            switch(select(.@isCorrect$)){
                case 1:
                    next;
                    callfunc "F_NO_DOUBLE_ACCOUNT_QUEST";
                    exp_base = .@exp_base;
                    exp_job = .@exp_job;
                    quest_id = .@quest_id;
                    set reward, .@reward;
										set reward_id, .@reward_id;
                    callfunc "F_HUNTING_QUEST",
                        .@quest_id, // ID DE LA QUETE A SET (LE NPC QUI DONNE LA QUETE DOIT S EN SOUVENIR)
                        .@credits_required; // PRIX EN CREDIT
                case 2:
                    next;
                    mes "[" + strnpcinfo(0) + "]";
                    mes .@come_back_soon$;
                    close;
            }
            break;
        case 2:
            mes .@come_back_soon$;
            close;
            break;
    }

    return;
}

moc_para01,48,16,0	warp	warpToQuest	1,1,moc_para01,48,164
moc_para01,48,162,0	warp	warpToEden	1,1,moc_para01,48,21

moc_para01,48,184,4	script	Hunting Quest [10-25]	100,{

    .@min_level = 10;
    .@max_level = 25;
    .@credits_required = 1;
    .@MobMenu$ = "Mandragora:Zombie:Spore:Smokie:Peco Peco:Elder Willow";
    .@index_to_start = 0;
    .@reward = 2;
    .@npc_number = 0;

    callfunc "F_VERIF_HUNTING",
        .@min_level,
        .@max_level,
        .@credits_required;

    callfunc "F_APPLY_QUEST_MENU",
        .@MobMenu$,
        .@index_to_start,
        .@credits_required,
        .@reward,
        .@npc_number;

OnInit:
    $credit_max = 5;
    setarray $Mob_List[0],1020,1015,1014,1056,1019,1033,1077,1018,1034,1013,1055,1057,1153,1273,1169,1249,1619,1403,1271,1620,1170,1102,1197,1516,1213,1317,1771,1504,1061,1776,1206,1410,1368,1117,1372,1269,1386,1319,1314,1316,1154,1678,1264,1278,1148,1777,1769,1770,1015,1076,1028,1016,1509,1179,1143,1036,1130,1257,1192,1102,1506,1117,1503,1197,1163,1132,1504,1061,1208,1201,1202,1379,1505,1507,1865,1864,1867;
    setarray $Mob_BaseExp[0],225,250,330,268,318,326,372,210,438,658,546,560,392,1288,794,2226,1024,2586,2758,1396,1478,5006,5270,5520,7236,7530,8406,9034,3824,4460,11800,5182,5430,5780,6714,6820,7206,7330,7512,8916,8174,9000,9000,11616,13752,27744,19560,27120,250,90,744,966,784,1182,2156,2176,2816,4236,4398,5006,5630,5780,8022,5270,6820,8756,9034,3824,11572,12634,13652,13366,13282,19484,17000,24000,34000;
    setarray $Mob_JobExp[0],160,165,540,172,144,202,186,140,276,398,240,222,240,814,480,1376,692,2006,1732,1396,910,2068,3448,4220,3278,3648,1802,5926,3824,2010,7400,3598,4000,3654,4030,5808,4288,4394,3910,3902,4270,9000,6000,5390,9394,15856,13244,8600,165,70,452,566,494,1198,2552,1244,1760,2976,2198,2068,3838,3654,3648,3448,3590,5500,5926,3824,9460,7040,6886,8718,8628,7118,11000,17000,24000;
    end; 
}

moc_para01,48,182,4	script	Hunting Quest [20-50]	100,{

    .@min_level = 20;
    .@max_level = 50;
    .@credits_required = 1;
    .@MobMenu$ = "Poison Spore:Creamy:Thara Frog:Wolf:Muka:Yoyo:Orc Zombie";
    .@index_to_start = 6;
    .@reward = 4;
    .@npc_number = 1;
    
    callfunc "F_VERIF_HUNTING",
        .@min_level,
        .@max_level,
        .@credits_required;

    callfunc "F_APPLY_QUEST_MENU",
        .@MobMenu$,
        .@index_to_start,
        .@credits_required,
        .@reward,
        .@npc_number;

}

moc_para01,48,180,4	script	Hunting Quest [40-70]	100,{

    .@min_level = 40;
    .@max_level = 70;
    .@credits_required = 1;
    .@MobMenu$ = "Orc Lady:Skeleton Worker:Myst Case:Porcellio:Antique Firelock:Alligator:Noxious:Sohee";
    .@index_to_start = 13;
    .@reward = 6;
    .@npc_number = 2;
    
    callfunc "F_VERIF_HUNTING",
        .@min_level,
        .@max_level,
        .@credits_required;

    callfunc "F_APPLY_QUEST_MENU",
        .@MobMenu$,
        .@index_to_start,
        .@credits_required,
        .@reward,
        .@npc_number;
}

moc_para01,48,178,4	script	Hunting Quest [60-84]	100,{

    .@min_level = 60;
    .@max_level = 84;
    .@credits_required = 1;
    .@MobMenu$ = "Bathory:Zombie Prisoner:Mi Gao:High Orc:Seal:Vanberk:Dullahan:Nightmare:Siroma:Anolian:Live Peach Tree:Geographer";
    .@index_to_start = 21;
    .@reward = 8;
    .@npc_number = 3;
    
    callfunc "F_VERIF_HUNTING",
        .@min_level,
        .@max_level,
        .@credits_required;

    callfunc "F_APPLY_QUEST_MENU",
        .@MobMenu$,
        .@index_to_start,
        .@credits_required,
        .@reward,
        .@npc_number;
}

moc_para01,48,176,4	script	Hunting Quest [85-99]	100,{

    .@min_level = 85;
    .@max_level = 99;
    .@credits_required = 1;
    .@MobMenu$ = "Evil Druid:Goat:Clock:Sleeper:Freezer:Permeter:Solider:Pasana:Venatu:Merman:Stalactic Golem:Medusa:Ice Titan:Agav:Echio";
    .@index_to_start = 33;
    .@reward = 10;
    .@npc_number = 4;
    
    callfunc "F_VERIF_HUNTING",
        .@min_level,
        .@max_level,
        .@credits_required;

    callfunc "F_APPLY_QUEST_MENU",
        .@MobMenu$,
        .@index_to_start,
        .@credits_required,
        .@reward,
        .@npc_number;
}